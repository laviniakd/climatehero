openapi: "3.0.0"
info:
  version: 1.0.0
  title: Climate Hero
  description: A web app to incentivize users to be more eco-friendly
#servers:
#  - url: http://petstore.swagger.io/api
paths:
  /addUser:
    post:
      description: |
        Creates a new Climate Hero user
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: successfully added user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Name'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    get:
      description: Logs in a user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                pin:
                  type: string
#      parameters:
#        - name: email
#          in: body
#          description: email of the user logging in
#          required: true
#          type: string
#        - name: pin
#          in: body
#          description: pin of the user logging in
#          required: true
#          type: string
      responses:
        '200':
          description: successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Name'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{email}:
    get:
      description: Gets user info
      operationId: getUserInfo
      parameters:
        - name: email
          in: path
          description: email of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkItem:
    post:
      description: Checks an item
      operationId: checkItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                item:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckReturn'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /updateList:
    post:
      description: updates a user list
      operationId: updateList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                listItems:
                  type: array
                  items:
                    type: string
#      parameters:
#        - name: email
#          in: body
#          description: email of the user
#          required: true
#          schema:
#            type: string
#        - name: listItems
#          in: body
#          description: items on the list
#          required: true
#          schema:
#            type: array
#            items:
#              type: string
      responses:
        '200':
          description: success
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
components:
  schemas:
    Name:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    NewUser:
      type: object
      required:
        - email
        - pin
        - name
      properties:
        email:
          type: string
        pin:
          type: string
        name:
          type: string

    CheckReturn:
      type: object
      required:
        - points
        - pointsMessage
      properties:
        points:
          type: integer
          format: int64
        pointsMessage:
          type: string
          
    UserInfo:
      type: object
      required:
        - points
        - checkList
        - pointsMessage
      properties:
        points:
          type: integer
          format: int64
        checkList:
          type: array
          items:
            type: string
        pointsMessage:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
