// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A web app to incentivize users to be more eco-friendly",
    "title": "Climate Hero",
    "version": "1.0.0"
  },
  "paths": {
    "/addUser": {
      "post": {
        "description": "Creates a new Climate Hero user\n",
        "operationId": "addUser",
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully added user",
            "schema": {
              "$ref": "#/definitions/Name"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checkItem": {
      "post": {
        "description": "Checks an item",
        "operationId": "checkItem",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/CheckReturn"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "description": "Logs in a user",
        "operationId": "login",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully logged in",
            "schema": {
              "$ref": "#/definitions/Name"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/updateList": {
      "post": {
        "description": "updates a user list",
        "operationId": "updateList",
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "listItems": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{email}": {
      "get": {
        "description": "Gets user info",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "type": "string",
            "description": "email of the user",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckReturn": {
      "type": "object",
      "required": [
        "points",
        "pointsMessage"
      ],
      "properties": {
        "points": {
          "type": "integer",
          "format": "int64"
        },
        "pointsMessage": {
          "type": "string"
        }
      }
    },
    "Email": {
      "type": "string"
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LoginBody": {
      "type": "object",
      "required": [
        "email",
        "pin"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        }
      }
    },
    "Name": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "NewUser": {
      "type": "object",
      "required": [
        "email",
        "pin",
        "name"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "points",
        "checkList",
        "pointsMessage"
      ],
      "properties": {
        "checkList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "points": {
          "type": "integer",
          "format": "int64"
        },
        "pointsMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A web app to incentivize users to be more eco-friendly",
    "title": "Climate Hero",
    "version": "1.0.0"
  },
  "paths": {
    "/addUser": {
      "post": {
        "description": "Creates a new Climate Hero user\n",
        "operationId": "addUser",
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully added user",
            "schema": {
              "$ref": "#/definitions/Name"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checkItem": {
      "post": {
        "description": "Checks an item",
        "operationId": "checkItem",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "item": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/CheckReturn"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "description": "Logs in a user",
        "operationId": "login",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully logged in",
            "schema": {
              "$ref": "#/definitions/Name"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/updateList": {
      "post": {
        "description": "updates a user list",
        "operationId": "updateList",
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "listItems": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{email}": {
      "get": {
        "description": "Gets user info",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "type": "string",
            "description": "email of the user",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckReturn": {
      "type": "object",
      "required": [
        "points",
        "pointsMessage"
      ],
      "properties": {
        "points": {
          "type": "integer",
          "format": "int64"
        },
        "pointsMessage": {
          "type": "string"
        }
      }
    },
    "Email": {
      "type": "string"
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LoginBody": {
      "type": "object",
      "required": [
        "email",
        "pin"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        }
      }
    },
    "Name": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "NewUser": {
      "type": "object",
      "required": [
        "email",
        "pin",
        "name"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "points",
        "checkList",
        "pointsMessage"
      ],
      "properties": {
        "checkList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "points": {
          "type": "integer",
          "format": "int64"
        },
        "pointsMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
